// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pbmap.proto

package pbmap

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// MethodMap gives the parameters how to Map a GRPC Service Method to an REST Endpoint
type MethodMap struct {
	// "GET", "PUT", "POST", "DELETE"
	Method string `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	// Format "a/b/c/:d/:e" - a/b/c are fixed in the path, :d and :e are paramaters mapped to fields D, E in the underlying GRPC Request
	// Has to be compatible with Julian Schmidt's HTTP Router
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Format "key1=:var1&key=:var2" They keys will be mapped to the variables var1, var2 of the unterlying GRPC Request
	QueryString          string   `protobuf:"bytes,3,opt,name=query_string,json=queryString,proto3" json:"query_string,omitempty"`
	Body                 string   `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MethodMap) Reset()         { *m = MethodMap{} }
func (m *MethodMap) String() string { return proto.CompactTextString(m) }
func (*MethodMap) ProtoMessage()    {}
func (*MethodMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_9aa92ef7fbe7dfdc, []int{0}
}

func (m *MethodMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MethodMap.Unmarshal(m, b)
}
func (m *MethodMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MethodMap.Marshal(b, m, deterministic)
}
func (m *MethodMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MethodMap.Merge(m, src)
}
func (m *MethodMap) XXX_Size() int {
	return xxx_messageInfo_MethodMap.Size(m)
}
func (m *MethodMap) XXX_DiscardUnknown() {
	xxx_messageInfo_MethodMap.DiscardUnknown(m)
}

var xxx_messageInfo_MethodMap proto.InternalMessageInfo

func (m *MethodMap) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *MethodMap) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *MethodMap) GetQueryString() string {
	if m != nil {
		return m.QueryString
	}
	return ""
}

func (m *MethodMap) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

// If an Submessage of an Request-Message in Protobuf has a field (directly at the moment, deeper nesting is not supported at the moment), then additional parameters defined in query (similar to the querystring syntax of your rest-framework) will be added to the queryString documentation and mapped automatically to the objects
type QueryMap struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryMap) Reset()         { *m = QueryMap{} }
func (m *QueryMap) String() string { return proto.CompactTextString(m) }
func (*QueryMap) ProtoMessage()    {}
func (*QueryMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_9aa92ef7fbe7dfdc, []int{1}
}

func (m *QueryMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryMap.Unmarshal(m, b)
}
func (m *QueryMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryMap.Marshal(b, m, deterministic)
}
func (m *QueryMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryMap.Merge(m, src)
}
func (m *QueryMap) XXX_Size() int {
	return xxx_messageInfo_QueryMap.Size(m)
}
func (m *QueryMap) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryMap.DiscardUnknown(m)
}

var xxx_messageInfo_QueryMap proto.InternalMessageInfo

func (m *QueryMap) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

// Page provides information from the query string which you can use to get a larger collection of objects pagewise
type Page struct {
	Limit                uint64   `protobuf:"varint,1,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset               uint64   `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Page) Reset()         { *m = Page{} }
func (m *Page) String() string { return proto.CompactTextString(m) }
func (*Page) ProtoMessage()    {}
func (*Page) Descriptor() ([]byte, []int) {
	return fileDescriptor_9aa92ef7fbe7dfdc, []int{2}
}

func (m *Page) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Page.Unmarshal(m, b)
}
func (m *Page) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Page.Marshal(b, m, deterministic)
}
func (m *Page) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Page.Merge(m, src)
}
func (m *Page) XXX_Size() int {
	return xxx_messageInfo_Page.Size(m)
}
func (m *Page) XXX_DiscardUnknown() {
	xxx_messageInfo_Page.DiscardUnknown(m)
}

var xxx_messageInfo_Page proto.InternalMessageInfo

func (m *Page) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Page) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type Filter struct {
	Query                string   `protobuf:"bytes,1,opt,name=Query,proto3" json:"Query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_9aa92ef7fbe7dfdc, []int{3}
}

func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (m *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(m, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

func (m *Filter) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

// Sort provides information from the query string on how to sort a given collection of objects
type Sort struct {
	Field                string   `protobuf:"bytes,1,opt,name=Field,proto3" json:"Field,omitempty"`
	Desc                 bool     `protobuf:"varint,2,opt,name=Desc,proto3" json:"Desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sort) Reset()         { *m = Sort{} }
func (m *Sort) String() string { return proto.CompactTextString(m) }
func (*Sort) ProtoMessage()    {}
func (*Sort) Descriptor() ([]byte, []int) {
	return fileDescriptor_9aa92ef7fbe7dfdc, []int{4}
}

func (m *Sort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sort.Unmarshal(m, b)
}
func (m *Sort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sort.Marshal(b, m, deterministic)
}
func (m *Sort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sort.Merge(m, src)
}
func (m *Sort) XXX_Size() int {
	return xxx_messageInfo_Sort.Size(m)
}
func (m *Sort) XXX_DiscardUnknown() {
	xxx_messageInfo_Sort.DiscardUnknown(m)
}

var xxx_messageInfo_Sort proto.InternalMessageInfo

func (m *Sort) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Sort) GetDesc() bool {
	if m != nil {
		return m.Desc
	}
	return false
}

// ServiceMap provides information for how to map an GRPC Service to an REST Service
type ServiceMap struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	BaseUri              string   `protobuf:"bytes,2,opt,name=base_uri,json=baseUri,proto3" json:"base_uri,omitempty"`
	TargetPackage        string   `protobuf:"bytes,3,opt,name=target_package,json=targetPackage,proto3" json:"target_package,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceMap) Reset()         { *m = ServiceMap{} }
func (m *ServiceMap) String() string { return proto.CompactTextString(m) }
func (*ServiceMap) ProtoMessage()    {}
func (*ServiceMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_9aa92ef7fbe7dfdc, []int{5}
}

func (m *ServiceMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceMap.Unmarshal(m, b)
}
func (m *ServiceMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceMap.Marshal(b, m, deterministic)
}
func (m *ServiceMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceMap.Merge(m, src)
}
func (m *ServiceMap) XXX_Size() int {
	return xxx_messageInfo_ServiceMap.Size(m)
}
func (m *ServiceMap) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceMap.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceMap proto.InternalMessageInfo

func (m *ServiceMap) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ServiceMap) GetBaseUri() string {
	if m != nil {
		return m.BaseUri
	}
	return ""
}

func (m *ServiceMap) GetTargetPackage() string {
	if m != nil {
		return m.TargetPackage
	}
	return ""
}

var E_MethodMap = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: (*MethodMap)(nil),
	Field:         87654321,
	Name:          "pbmap.method_map",
	Tag:           "bytes,87654321,opt,name=method_map",
	Filename:      "pbmap.proto",
}

var E_QueryMap = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*QueryMap)(nil),
	Field:         9813242,
	Name:          "pbmap.query_map",
	Tag:           "bytes,9813242,opt,name=query_map",
	Filename:      "pbmap.proto",
}

var E_ServiceMap = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.ServiceOptions)(nil),
	ExtensionType: (*ServiceMap)(nil),
	Field:         87654323,
	Name:          "pbmap.service_map",
	Tag:           "bytes,87654323,opt,name=service_map",
	Filename:      "pbmap.proto",
}

var E_DartPackage = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FileOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         97454431,
	Name:          "pbmap.dart_package",
	Tag:           "bytes,97454431,opt,name=dart_package",
	Filename:      "pbmap.proto",
}

func init() {
	proto.RegisterType((*MethodMap)(nil), "pbmap.MethodMap")
	proto.RegisterType((*QueryMap)(nil), "pbmap.QueryMap")
	proto.RegisterType((*Page)(nil), "pbmap.Page")
	proto.RegisterType((*Filter)(nil), "pbmap.Filter")
	proto.RegisterType((*Sort)(nil), "pbmap.Sort")
	proto.RegisterType((*ServiceMap)(nil), "pbmap.ServiceMap")
	proto.RegisterExtension(E_MethodMap)
	proto.RegisterExtension(E_QueryMap)
	proto.RegisterExtension(E_ServiceMap)
	proto.RegisterExtension(E_DartPackage)
}

func init() { proto.RegisterFile("pbmap.proto", fileDescriptor_9aa92ef7fbe7dfdc) }

var fileDescriptor_9aa92ef7fbe7dfdc = []byte{
	// 505 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xc1, 0x6e, 0xd3, 0x4c,
	0x10, 0x56, 0xfe, 0xdf, 0x4d, 0xe3, 0x71, 0x81, 0x62, 0x21, 0x64, 0x2a, 0x44, 0x83, 0xa5, 0x94,
	0x22, 0x21, 0x17, 0xc1, 0xcd, 0xb2, 0x7d, 0x40, 0x28, 0x27, 0xaa, 0x26, 0x8e, 0xe0, 0x1a, 0xad,
	0x93, 0x8d, 0xb3, 0x22, 0xce, 0x6e, 0x76, 0x37, 0x95, 0xfa, 0x1a, 0xbc, 0x09, 0xe2, 0xc0, 0x85,
	0x77, 0x40, 0xe2, 0xc0, 0x95, 0x13, 0x0f, 0x01, 0x17, 0xd0, 0xce, 0xae, 0x03, 0x12, 0x70, 0xf2,
	0x7c, 0xdf, 0xcc, 0x7c, 0x3b, 0xfe, 0x66, 0x20, 0x10, 0x55, 0x43, 0x44, 0x22, 0x24, 0xd7, 0x3c,
	0xdc, 0x43, 0x70, 0xd4, 0xaf, 0x39, 0xaf, 0x57, 0xf4, 0x0c, 0xc9, 0x6a, 0xbb, 0x38, 0x9b, 0x53,
	0x35, 0x93, 0x4c, 0x68, 0x2e, 0x6d, 0x61, 0xbc, 0x06, 0xff, 0x9c, 0xea, 0x25, 0x9f, 0x9f, 0x13,
	0x11, 0xde, 0x86, 0x6e, 0x83, 0x20, 0xea, 0xf4, 0x3b, 0xa7, 0x7e, 0xe9, 0x50, 0x18, 0x82, 0x27,
	0x88, 0x5e, 0x46, 0xff, 0x21, 0x8b, 0x71, 0x78, 0x1f, 0x0e, 0x36, 0x5b, 0x2a, 0xaf, 0xa6, 0x4a,
	0x4b, 0xb6, 0xae, 0xa3, 0xff, 0x31, 0x17, 0x20, 0x37, 0x41, 0xca, 0xb4, 0x55, 0x7c, 0x7e, 0x15,
	0x79, 0xb6, 0xcd, 0xc4, 0x71, 0x1f, 0x7a, 0x63, 0x53, 0x62, 0x9e, 0xbb, 0x05, 0x7b, 0x58, 0xee,
	0x5e, 0xb3, 0x20, 0xae, 0xc0, 0x1b, 0x91, 0x9a, 0x9a, 0xec, 0x0b, 0xd6, 0x30, 0x8d, 0x59, 0xaf,
	0xb4, 0xc0, 0x8c, 0x78, 0xb1, 0x58, 0x28, 0xaa, 0x71, 0x18, 0xaf, 0x74, 0x28, 0x7d, 0xf4, 0xe9,
	0xe3, 0xfb, 0xc1, 0x03, 0x18, 0x08, 0x52, 0x53, 0x4b, 0xe5, 0x99, 0xfd, 0x16, 0x27, 0x86, 0xc3,
	0xee, 0x3c, 0xc3, 0x4f, 0x11, 0x3f, 0x86, 0xee, 0x90, 0xad, 0x34, 0x95, 0xe6, 0x95, 0xf1, 0xef,
	0x33, 0x20, 0x48, 0x0f, 0x8d, 0x5a, 0x00, 0xfe, 0x26, 0xcf, 0x90, 0x28, 0xe2, 0x31, 0x78, 0x13,
	0x2e, 0xb5, 0xa9, 0x1f, 0x32, 0xba, 0x6a, 0x1d, 0xb2, 0xc0, 0xfc, 0xe9, 0x73, 0xaa, 0x66, 0x38,
	0x53, 0xaf, 0xc4, 0x38, 0x3d, 0x36, 0x1a, 0x47, 0x10, 0x29, 0x2e, 0x75, 0x9e, 0x61, 0x5d, 0x71,
	0x62, 0xfc, 0xcf, 0x33, 0x93, 0x2f, 0xe2, 0x25, 0xc0, 0x84, 0xca, 0x4b, 0x36, 0xa3, 0xc6, 0x8c,
	0x08, 0xf6, 0x2f, 0xa9, 0x54, 0x8c, 0xaf, 0x9d, 0x74, 0x0b, 0xc3, 0x3b, 0xd0, 0xab, 0x88, 0xa2,
	0xd3, 0xad, 0x64, 0x6e, 0x03, 0xfb, 0x06, 0xbf, 0x94, 0x2c, 0x1c, 0xc0, 0x75, 0x4d, 0x64, 0x4d,
	0xf5, 0x54, 0x90, 0xd9, 0x6b, 0x52, 0x53, 0xb7, 0x86, 0x6b, 0x96, 0x1d, 0x59, 0x32, 0x2d, 0x01,
	0xec, 0x26, 0xa7, 0x0d, 0x11, 0xe1, 0xbd, 0xc4, 0x5e, 0x45, 0xd2, 0x5e, 0x45, 0x62, 0x2f, 0xe0,
	0x42, 0x68, 0xc6, 0xd7, 0x2a, 0x7a, 0xfb, 0xe3, 0xeb, 0xc3, 0x7e, 0xe7, 0x34, 0x78, 0x72, 0x98,
	0xd8, 0x93, 0xda, 0x1d, 0x48, 0xe9, 0x37, 0x6d, 0x98, 0x8e, 0xc0, 0xb7, 0xfb, 0x37, 0x92, 0xc7,
	0x7f, 0x91, 0x54, 0xca, 0xac, 0xc2, 0x69, 0x7e, 0xff, 0xf6, 0xd9, 0x43, 0xcd, 0x1b, 0x4e, 0xb3,
	0x3d, 0x82, 0xb2, 0xb7, 0x71, 0x51, 0xfa, 0x0a, 0x02, 0x65, 0xfd, 0xf8, 0x87, 0xa6, 0x73, 0xab,
	0xd5, 0x7c, 0xd7, 0xce, 0x79, 0xd3, 0x69, 0xfe, 0x72, 0xb3, 0x04, 0xb5, 0x8b, 0xd3, 0x67, 0x70,
	0x30, 0x27, 0x72, 0x67, 0x51, 0x78, 0xf7, 0x0f, 0xe1, 0x21, 0x5b, 0xed, 0x54, 0xbf, 0xbc, 0xf9,
	0x90, 0xd8, 0x53, 0x36, 0x4d, 0xce, 0xc1, 0xaa, 0x8b, 0xb5, 0x4f, 0x7f, 0x06, 0x00, 0x00, 0xff,
	0xff, 0x13, 0xa9, 0xea, 0xe2, 0x65, 0x03, 0x00, 0x00,
}
