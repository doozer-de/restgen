// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: pb/samplesvc.proto

package pb

import (
	pbmap "github.com/doozer-de/restgen/pbmap"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeepPathPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HaveAll *HaveAll `protobuf:"bytes,1,opt,name=HaveAll,proto3" json:"HaveAll,omitempty"`
}

func (x *DeepPathPathRequest) Reset() {
	*x = DeepPathPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeepPathPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepPathPathRequest) ProtoMessage() {}

func (x *DeepPathPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepPathPathRequest.ProtoReflect.Descriptor instead.
func (*DeepPathPathRequest) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{0}
}

func (x *DeepPathPathRequest) GetHaveAll() *HaveAll {
	if x != nil {
		return x.HaveAll
	}
	return nil
}

type DeepPathPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DeepPathPathResponse) Reset() {
	*x = DeepPathPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeepPathPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepPathPathResponse) ProtoMessage() {}

func (x *DeepPathPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepPathPathResponse.ProtoReflect.Descriptor instead.
func (*DeepPathPathResponse) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{1}
}

func (x *DeepPathPathResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeepHaveAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HaveAll *HaveAll `protobuf:"bytes,1,opt,name=HaveAll,proto3" json:"HaveAll,omitempty"`
}

func (x *DeepHaveAllRequest) Reset() {
	*x = DeepHaveAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeepHaveAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepHaveAllRequest) ProtoMessage() {}

func (x *DeepHaveAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepHaveAllRequest.ProtoReflect.Descriptor instead.
func (*DeepHaveAllRequest) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{2}
}

func (x *DeepHaveAllRequest) GetHaveAll() *HaveAll {
	if x != nil {
		return x.HaveAll
	}
	return nil
}

type DeepHaveAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DeepHaveAllResponse) Reset() {
	*x = DeepHaveAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeepHaveAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepHaveAllResponse) ProtoMessage() {}

func (x *DeepHaveAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepHaveAllResponse.ProtoReflect.Descriptor instead.
func (*DeepHaveAllResponse) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{3}
}

func (x *DeepHaveAllResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type HaveAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     uint32               `protobuf:"varint,19,opt,name=Id,proto3" json:"Id,omitempty"`
	DoubleField            float64              `protobuf:"fixed64,1,opt,name=DoubleField,proto3" json:"DoubleField,omitempty"`
	Float                  float32              `protobuf:"fixed32,2,opt,name=Float,proto3" json:"Float,omitempty"`
	Int32                  int32                `protobuf:"varint,3,opt,name=Int32,proto3" json:"Int32,omitempty"`
	Int64                  int64                `protobuf:"varint,4,opt,name=Int64,proto3" json:"Int64,omitempty"`
	UInt32                 uint32               `protobuf:"varint,5,opt,name=UInt32,proto3" json:"UInt32,omitempty"`
	UInt64                 uint64               `protobuf:"varint,6,opt,name=UInt64,proto3" json:"UInt64,omitempty"`
	SInt64                 int64                `protobuf:"zigzag64,7,opt,name=SInt64,proto3" json:"SInt64,omitempty"`
	SInt32                 int32                `protobuf:"zigzag32,8,opt,name=SInt32,proto3" json:"SInt32,omitempty"`
	SFixed                 uint32               `protobuf:"fixed32,9,opt,name=SFixed,proto3" json:"SFixed,omitempty"`
	Fixed64                uint64               `protobuf:"fixed64,10,opt,name=Fixed64,proto3" json:"Fixed64,omitempty"`
	SFixed32               int32                `protobuf:"fixed32,11,opt,name=SFixed32,proto3" json:"SFixed32,omitempty"`
	SFixed64               int64                `protobuf:"fixed64,12,opt,name=SFixed64,proto3" json:"SFixed64,omitempty"`
	BoolField              bool                 `protobuf:"varint,13,opt,name=BoolField,proto3" json:"BoolField,omitempty"`
	StringField            string               `protobuf:"bytes,14,opt,name=StringField,proto3" json:"StringField,omitempty"`
	BytesField             []byte               `protobuf:"bytes,15,opt,name=BytesField,proto3" json:"BytesField,omitempty"`
	Embedded               *Embedded            `protobuf:"bytes,16,opt,name=Embedded,proto3" json:"Embedded,omitempty"`
	RepeatedString         []string             `protobuf:"bytes,17,rep,name=RepeatedString,proto3" json:"RepeatedString,omitempty"`
	RepeatedBytes          [][]byte             `protobuf:"bytes,20,rep,name=RepeatedBytes,proto3" json:"RepeatedBytes,omitempty"`
	RepeatedEmbedded       []*Embedded          `protobuf:"bytes,18,rep,name=RepeatedEmbedded,proto3" json:"RepeatedEmbedded,omitempty"`
	MapStringStringField   map[string]string    `protobuf:"bytes,21,rep,name=MapStringStringField,proto3" json:"MapStringStringField,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MapStringEmbeddedField map[string]*Embedded `protobuf:"bytes,22,rep,name=MapStringEmbeddedField,proto3" json:"MapStringEmbeddedField,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *HaveAll) Reset() {
	*x = HaveAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HaveAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaveAll) ProtoMessage() {}

func (x *HaveAll) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaveAll.ProtoReflect.Descriptor instead.
func (*HaveAll) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{4}
}

func (x *HaveAll) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HaveAll) GetDoubleField() float64 {
	if x != nil {
		return x.DoubleField
	}
	return 0
}

func (x *HaveAll) GetFloat() float32 {
	if x != nil {
		return x.Float
	}
	return 0
}

func (x *HaveAll) GetInt32() int32 {
	if x != nil {
		return x.Int32
	}
	return 0
}

func (x *HaveAll) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *HaveAll) GetUInt32() uint32 {
	if x != nil {
		return x.UInt32
	}
	return 0
}

func (x *HaveAll) GetUInt64() uint64 {
	if x != nil {
		return x.UInt64
	}
	return 0
}

func (x *HaveAll) GetSInt64() int64 {
	if x != nil {
		return x.SInt64
	}
	return 0
}

func (x *HaveAll) GetSInt32() int32 {
	if x != nil {
		return x.SInt32
	}
	return 0
}

func (x *HaveAll) GetSFixed() uint32 {
	if x != nil {
		return x.SFixed
	}
	return 0
}

func (x *HaveAll) GetFixed64() uint64 {
	if x != nil {
		return x.Fixed64
	}
	return 0
}

func (x *HaveAll) GetSFixed32() int32 {
	if x != nil {
		return x.SFixed32
	}
	return 0
}

func (x *HaveAll) GetSFixed64() int64 {
	if x != nil {
		return x.SFixed64
	}
	return 0
}

func (x *HaveAll) GetBoolField() bool {
	if x != nil {
		return x.BoolField
	}
	return false
}

func (x *HaveAll) GetStringField() string {
	if x != nil {
		return x.StringField
	}
	return ""
}

func (x *HaveAll) GetBytesField() []byte {
	if x != nil {
		return x.BytesField
	}
	return nil
}

func (x *HaveAll) GetEmbedded() *Embedded {
	if x != nil {
		return x.Embedded
	}
	return nil
}

func (x *HaveAll) GetRepeatedString() []string {
	if x != nil {
		return x.RepeatedString
	}
	return nil
}

func (x *HaveAll) GetRepeatedBytes() [][]byte {
	if x != nil {
		return x.RepeatedBytes
	}
	return nil
}

func (x *HaveAll) GetRepeatedEmbedded() []*Embedded {
	if x != nil {
		return x.RepeatedEmbedded
	}
	return nil
}

func (x *HaveAll) GetMapStringStringField() map[string]string {
	if x != nil {
		return x.MapStringStringField
	}
	return nil
}

func (x *HaveAll) GetMapStringEmbeddedField() map[string]*Embedded {
	if x != nil {
		return x.MapStringEmbeddedField
	}
	return nil
}

type Embedded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Text     string    `protobuf:"bytes,2,opt,name=Text,proto3" json:"Text,omitempty"`
	Embedded *Embedded `protobuf:"bytes,3,opt,name=Embedded,proto3" json:"Embedded,omitempty"`
}

func (x *Embedded) Reset() {
	*x = Embedded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Embedded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Embedded) ProtoMessage() {}

func (x *Embedded) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Embedded.ProtoReflect.Descriptor instead.
func (*Embedded) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{5}
}

func (x *Embedded) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Embedded) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Embedded) GetEmbedded() *Embedded {
	if x != nil {
		return x.Embedded
	}
	return nil
}

type Embedded2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *Embedded2) Reset() {
	*x = Embedded2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Embedded2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Embedded2) ProtoMessage() {}

func (x *Embedded2) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Embedded2.ProtoReflect.Descriptor instead.
func (*Embedded2) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{6}
}

func (x *Embedded2) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Small struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=Text,proto3" json:"Text,omitempty"`
}

func (x *Small) Reset() {
	*x = Small{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Small) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Small) ProtoMessage() {}

func (x *Small) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Small.ProtoReflect.Descriptor instead.
func (*Small) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{7}
}

func (x *Small) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Small) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type GetHaveAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HaveAll *HaveAll `protobuf:"bytes,1,opt,name=HaveAll,proto3" json:"HaveAll,omitempty"`
}

func (x *GetHaveAllRequest) Reset() {
	*x = GetHaveAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHaveAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHaveAllRequest) ProtoMessage() {}

func (x *GetHaveAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHaveAllRequest.ProtoReflect.Descriptor instead.
func (*GetHaveAllRequest) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{8}
}

func (x *GetHaveAllRequest) GetHaveAll() *HaveAll {
	if x != nil {
		return x.HaveAll
	}
	return nil
}

type GetHaveAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HaveAll *HaveAll `protobuf:"bytes,1,opt,name=HaveAll,proto3" json:"HaveAll,omitempty"`
}

func (x *GetHaveAllResponse) Reset() {
	*x = GetHaveAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHaveAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHaveAllResponse) ProtoMessage() {}

func (x *GetHaveAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHaveAllResponse.ProtoReflect.Descriptor instead.
func (*GetHaveAllResponse) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{9}
}

func (x *GetHaveAllResponse) GetHaveAll() *HaveAll {
	if x != nil {
		return x.HaveAll
	}
	return nil
}

type CreateHaveAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HaveAll *HaveAll `protobuf:"bytes,1,opt,name=HaveAll,proto3" json:"HaveAll,omitempty"`
}

func (x *CreateHaveAllRequest) Reset() {
	*x = CreateHaveAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHaveAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHaveAllRequest) ProtoMessage() {}

func (x *CreateHaveAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHaveAllRequest.ProtoReflect.Descriptor instead.
func (*CreateHaveAllRequest) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{10}
}

func (x *CreateHaveAllRequest) GetHaveAll() *HaveAll {
	if x != nil {
		return x.HaveAll
	}
	return nil
}

type CreateHaveAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HaveAll *HaveAll `protobuf:"bytes,1,opt,name=HaveAll,proto3" json:"HaveAll,omitempty"`
}

func (x *CreateHaveAllResponse) Reset() {
	*x = CreateHaveAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHaveAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHaveAllResponse) ProtoMessage() {}

func (x *CreateHaveAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHaveAllResponse.ProtoReflect.Descriptor instead.
func (*CreateHaveAllResponse) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{11}
}

func (x *CreateHaveAllResponse) GetHaveAll() *HaveAll {
	if x != nil {
		return x.HaveAll
	}
	return nil
}

type DoNotCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DoNotCreateRequest) Reset() {
	*x = DoNotCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoNotCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoNotCreateRequest) ProtoMessage() {}

func (x *DoNotCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoNotCreateRequest.ProtoReflect.Descriptor instead.
func (*DoNotCreateRequest) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{12}
}

type DoNotCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DoNotCreateResponse) Reset() {
	*x = DoNotCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoNotCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoNotCreateResponse) ProtoMessage() {}

func (x *DoNotCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoNotCreateResponse.ProtoReflect.Descriptor instead.
func (*DoNotCreateResponse) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{13}
}

type GetSmallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Idtest uint32 `protobuf:"varint,2,opt,name=Idtest,proto3" json:"Idtest,omitempty"`
}

func (x *GetSmallRequest) Reset() {
	*x = GetSmallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSmallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSmallRequest) ProtoMessage() {}

func (x *GetSmallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSmallRequest.ProtoReflect.Descriptor instead.
func (*GetSmallRequest) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{14}
}

func (x *GetSmallRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSmallRequest) GetIdtest() uint32 {
	if x != nil {
		return x.Idtest
	}
	return 0
}

type GetSmallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Small *Small `protobuf:"bytes,1,opt,name=Small,proto3" json:"Small,omitempty"`
}

func (x *GetSmallResponse) Reset() {
	*x = GetSmallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSmallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSmallResponse) ProtoMessage() {}

func (x *GetSmallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSmallResponse.ProtoReflect.Descriptor instead.
func (*GetSmallResponse) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{15}
}

func (x *GetSmallResponse) GetSmall() *Small {
	if x != nil {
		return x.Small
	}
	return nil
}

type PutSmallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Small *Small `protobuf:"bytes,1,opt,name=Small,proto3" json:"Small,omitempty"`
}

func (x *PutSmallRequest) Reset() {
	*x = PutSmallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutSmallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutSmallRequest) ProtoMessage() {}

func (x *PutSmallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutSmallRequest.ProtoReflect.Descriptor instead.
func (*PutSmallRequest) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{16}
}

func (x *PutSmallRequest) GetSmall() *Small {
	if x != nil {
		return x.Small
	}
	return nil
}

type PutSmallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutSmallResponse) Reset() {
	*x = PutSmallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutSmallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutSmallResponse) ProtoMessage() {}

func (x *PutSmallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutSmallResponse.ProtoReflect.Descriptor instead.
func (*PutSmallResponse) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{17}
}

type PostSmallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Small *Small `protobuf:"bytes,1,opt,name=Small,proto3" json:"Small,omitempty"`
}

func (x *PostSmallRequest) Reset() {
	*x = PostSmallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostSmallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostSmallRequest) ProtoMessage() {}

func (x *PostSmallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostSmallRequest.ProtoReflect.Descriptor instead.
func (*PostSmallRequest) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{18}
}

func (x *PostSmallRequest) GetSmall() *Small {
	if x != nil {
		return x.Small
	}
	return nil
}

type PostSmallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostSmallResponse) Reset() {
	*x = PostSmallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostSmallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostSmallResponse) ProtoMessage() {}

func (x *PostSmallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostSmallResponse.ProtoReflect.Descriptor instead.
func (*PostSmallResponse) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{19}
}

type DeleteSmallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DeleteSmallRequest) Reset() {
	*x = DeleteSmallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSmallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSmallRequest) ProtoMessage() {}

func (x *DeleteSmallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSmallRequest.ProtoReflect.Descriptor instead.
func (*DeleteSmallRequest) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteSmallRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteSmallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSmallResponse) Reset() {
	*x = DeleteSmallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSmallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSmallResponse) ProtoMessage() {}

func (x *DeleteSmallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSmallResponse.ProtoReflect.Descriptor instead.
func (*DeleteSmallResponse) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{21}
}

type GetLongPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ida uint32 `protobuf:"varint,1,opt,name=Ida,proto3" json:"Ida,omitempty"`
	Idb string `protobuf:"bytes,2,opt,name=Idb,proto3" json:"Idb,omitempty"`
	Idc uint64 `protobuf:"varint,3,opt,name=Idc,proto3" json:"Idc,omitempty"`
	Idd int32  `protobuf:"varint,4,opt,name=Idd,proto3" json:"Idd,omitempty"`
	Ide string `protobuf:"bytes,5,opt,name=Ide,proto3" json:"Ide,omitempty"`
}

func (x *GetLongPathRequest) Reset() {
	*x = GetLongPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLongPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLongPathRequest) ProtoMessage() {}

func (x *GetLongPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLongPathRequest.ProtoReflect.Descriptor instead.
func (*GetLongPathRequest) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{22}
}

func (x *GetLongPathRequest) GetIda() uint32 {
	if x != nil {
		return x.Ida
	}
	return 0
}

func (x *GetLongPathRequest) GetIdb() string {
	if x != nil {
		return x.Idb
	}
	return ""
}

func (x *GetLongPathRequest) GetIdc() uint64 {
	if x != nil {
		return x.Idc
	}
	return 0
}

func (x *GetLongPathRequest) GetIdd() int32 {
	if x != nil {
		return x.Idd
	}
	return 0
}

func (x *GetLongPathRequest) GetIde() string {
	if x != nil {
		return x.Ide
	}
	return ""
}

type GetLongPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idf uint32 `protobuf:"varint,1,opt,name=Idf,proto3" json:"Idf,omitempty"`
}

func (x *GetLongPathResponse) Reset() {
	*x = GetLongPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLongPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLongPathResponse) ProtoMessage() {}

func (x *GetLongPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLongPathResponse.ProtoReflect.Descriptor instead.
func (*GetLongPathResponse) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{23}
}

func (x *GetLongPathResponse) GetIdf() uint32 {
	if x != nil {
		return x.Idf
	}
	return 0
}

type EmptyRequestMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequestMessageRequest) Reset() {
	*x = EmptyRequestMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequestMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequestMessageRequest) ProtoMessage() {}

func (x *EmptyRequestMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequestMessageRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequestMessageRequest) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{24}
}

type EmptyRequestMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequestMessageResponse) Reset() {
	*x = EmptyRequestMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequestMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequestMessageResponse) ProtoMessage() {}

func (x *EmptyRequestMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequestMessageResponse.ProtoReflect.Descriptor instead.
func (*EmptyRequestMessageResponse) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{25}
}

type PageSortFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   *pbmap.Page   `protobuf:"bytes,1,opt,name=Page,proto3" json:"Page,omitempty"`
	Sort   *pbmap.Sort   `protobuf:"bytes,2,opt,name=Sort,proto3" json:"Sort,omitempty"`
	Filter *pbmap.Filter `protobuf:"bytes,3,opt,name=Filter,proto3" json:"Filter,omitempty"`
}

func (x *PageSortFilterRequest) Reset() {
	*x = PageSortFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageSortFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageSortFilterRequest) ProtoMessage() {}

func (x *PageSortFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageSortFilterRequest.ProtoReflect.Descriptor instead.
func (*PageSortFilterRequest) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{26}
}

func (x *PageSortFilterRequest) GetPage() *pbmap.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *PageSortFilterRequest) GetSort() *pbmap.Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *PageSortFilterRequest) GetFilter() *pbmap.Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type PageSortFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageLimit   uint64 `protobuf:"varint,1,opt,name=PageLimit,proto3" json:"PageLimit,omitempty"`
	PageOffset  uint64 `protobuf:"varint,2,opt,name=PageOffset,proto3" json:"PageOffset,omitempty"`
	SortField   string `protobuf:"bytes,3,opt,name=SortField,proto3" json:"SortField,omitempty"`
	SortDesc    bool   `protobuf:"varint,4,opt,name=SortDesc,proto3" json:"SortDesc,omitempty"`
	FilterQuery string `protobuf:"bytes,5,opt,name=FilterQuery,proto3" json:"FilterQuery,omitempty"`
}

func (x *PageSortFilterResponse) Reset() {
	*x = PageSortFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_samplesvc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageSortFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageSortFilterResponse) ProtoMessage() {}

func (x *PageSortFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_samplesvc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageSortFilterResponse.ProtoReflect.Descriptor instead.
func (*PageSortFilterResponse) Descriptor() ([]byte, []int) {
	return file_pb_samplesvc_proto_rawDescGZIP(), []int{27}
}

func (x *PageSortFilterResponse) GetPageLimit() uint64 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

func (x *PageSortFilterResponse) GetPageOffset() uint64 {
	if x != nil {
		return x.PageOffset
	}
	return 0
}

func (x *PageSortFilterResponse) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *PageSortFilterResponse) GetSortDesc() bool {
	if x != nil {
		return x.SortDesc
	}
	return false
}

func (x *PageSortFilterResponse) GetFilterQuery() string {
	if x != nil {
		return x.FilterQuery
	}
	return ""
}

var File_pb_samplesvc_proto protoreflect.FileDescriptor

var file_pb_samplesvc_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x62, 0x2f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x76, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x11, 0x70, 0x62, 0x6d, 0x61, 0x70, 0x2f,
	0x70, 0x62, 0x6d, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3c, 0x0a, 0x13, 0x44,
	0x65, 0x65, 0x70, 0x50, 0x61, 0x74, 0x68, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c,
	0x52, 0x07, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x65,
	0x70, 0x50, 0x61, 0x74, 0x68, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49,
	0x64, 0x22, 0x3b, 0x0a, 0x12, 0x44, 0x65, 0x65, 0x70, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x48, 0x61, 0x76, 0x65, 0x41,
	0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x61,
	0x76, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x07, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x22, 0x25,
	0x0a, 0x13, 0x44, 0x65, 0x65, 0x70, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x49, 0x64, 0x22, 0xb7, 0x07, 0x0a, 0x07, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12,
	0x14, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x53, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x53,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x46, 0x69, 0x78, 0x65, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x07, 0x52, 0x06, 0x53, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x08, 0x53, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x10, 0x52, 0x08, 0x53, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12,
	0x1c, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x42, 0x6f, 0x6f, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x42, 0x79, 0x74, 0x65, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x42, 0x79, 0x74, 0x65, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x28, 0x0a, 0x08, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x52,
	0x08, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x11, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0d, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x18, 0x12, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x52,
	0x10, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65,
	0x64, 0x12, 0x59, 0x0a, 0x14, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x2e, 0x4d, 0x61, 0x70,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x5f, 0x0a, 0x16,
	0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65,
	0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70,
	0x62, 0x2e, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x16, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x1a, 0x47, 0x0a,
	0x19, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x57, 0x0a, 0x1b, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x64, 0x65, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x58, 0x0a, 0x08, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x28, 0x0a, 0x08, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x52,
	0x08, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x22, 0x1b, 0x0a, 0x09, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x64, 0x65, 0x64, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x05, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x65, 0x78, 0x74, 0x22, 0x3a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x48, 0x61, 0x76, 0x65,
	0x41, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x48,
	0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x07, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x22,
	0x3b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x76, 0x65,
	0x41, 0x6c, 0x6c, 0x52, 0x07, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x22, 0x3d, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x76, 0x65, 0x41,
	0x6c, 0x6c, 0x52, 0x07, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x22, 0x3e, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x76, 0x65, 0x41,
	0x6c, 0x6c, 0x52, 0x07, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x22, 0x14, 0x0a, 0x12, 0x44,
	0x6f, 0x4e, 0x6f, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x6f, 0x4e, 0x6f, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53,
	0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x49,
	0x64, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x49, 0x64, 0x74,
	0x65, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x53, 0x6d, 0x61, 0x6c, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6d, 0x61, 0x6c,
	0x6c, 0x52, 0x05, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x22, 0x32, 0x0a, 0x0f, 0x50, 0x75, 0x74, 0x53,
	0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x53,
	0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x05, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x22, 0x12, 0x0a, 0x10,
	0x50, 0x75, 0x74, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x33, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x05,
	0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x22, 0x13, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x6d, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64,
	0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x6e, 0x67, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x49, 0x64, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x49, 0x64, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x49, 0x64, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x49, 0x64,
	0x62, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x49, 0x64, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x49, 0x64, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x49, 0x64, 0x65, 0x22, 0x27, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x6e, 0x67, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x49, 0x64, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x49, 0x64, 0x66,
	0x22, 0x1c, 0x0a, 0x1a, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1d,
	0x0a, 0x1b, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x01,
	0x0a, 0x15, 0x50, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x70, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x70, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x6d, 0x61,
	0x70, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0xb2, 0x01, 0x0a, 0x16, 0x50, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67,
	0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x50,
	0x61, 0x67, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x6f,
	0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x44,
	0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x32, 0xab, 0x0d, 0x0a, 0x0e, 0x42, 0x69, 0x67, 0x54, 0x65, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48,
	0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19,
	0x8a, 0xfb, 0xaf, 0xce, 0x02, 0x13, 0x0a, 0x03, 0x50, 0x55, 0x54, 0x12, 0x09, 0x2f, 0x68, 0x61,
	0x76, 0x65, 0x61, 0x6c, 0x6c, 0x2f, 0x22, 0x01, 0x2a, 0x12, 0xad, 0x03, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xef, 0x02, 0x8a, 0xfb, 0xaf, 0xce, 0x02, 0xe8,
	0x02, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x12, 0x09, 0x2f, 0x68, 0x61, 0x76, 0x65, 0x61, 0x6c, 0x6c,
	0x2f, 0x1a, 0xd5, 0x02, 0x6b, 0x65, 0x79, 0x31, 0x3d, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c,
	0x2e, 0x49, 0x64, 0x26, 0x6b, 0x65, 0x79, 0x32, 0x3d, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c,
	0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x26, 0x6b, 0x65, 0x79,
	0x33, 0x3d, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x26,
	0x6b, 0x65, 0x79, 0x34, 0x3d, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x2e, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x26, 0x6b, 0x65, 0x79, 0x35, 0x3d, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x2e,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x26, 0x6b, 0x65, 0x79, 0x36, 0x3d, 0x48, 0x61, 0x76, 0x65, 0x41,
	0x6c, 0x6c, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x26, 0x6b, 0x65, 0x79, 0x37, 0x3d, 0x48,
	0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x26, 0x6b, 0x65,
	0x79, 0x38, 0x3d, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x2e, 0x53, 0x49, 0x6e, 0x74, 0x36,
	0x34, 0x26, 0x6b, 0x65, 0x79, 0x39, 0x3d, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x2e, 0x53,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x26, 0x6b, 0x65, 0x79, 0x31, 0x30, 0x3d, 0x48, 0x61, 0x76, 0x65,
	0x41, 0x6c, 0x6c, 0x2e, 0x53, 0x46, 0x69, 0x78, 0x65, 0x64, 0x26, 0x6b, 0x65, 0x79, 0x31, 0x31,
	0x3d, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34,
	0x26, 0x6b, 0x65, 0x79, 0x31, 0x32, 0x3d, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x2e, 0x53,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x26, 0x6b, 0x65, 0x79, 0x31, 0x33, 0x3d, 0x48, 0x61,
	0x76, 0x65, 0x41, 0x6c, 0x6c, 0x2e, 0x53, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x26, 0x6b,
	0x65, 0x79, 0x31, 0x34, 0x3d, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x26, 0x6b, 0x65, 0x79, 0x31, 0x35, 0x3d, 0x48, 0x61, 0x76,
	0x65, 0x41, 0x6c, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x26, 0x6b, 0x65, 0x79, 0x31, 0x36, 0x3d, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0xa7, 0x01, 0x0a, 0x08, 0x44, 0x65,
	0x65, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x65, 0x70,
	0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x65, 0x70, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6a, 0x8a, 0xfb, 0xaf, 0xce, 0x02, 0x64, 0x0a,
	0x03, 0x47, 0x45, 0x54, 0x12, 0x0a, 0x2f, 0x64, 0x65, 0x65, 0x70, 0x70, 0x61, 0x74, 0x68, 0x2f,
	0x1a, 0x51, 0x6b, 0x65, 0x79, 0x3d, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x2e, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x2e,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65,
	0x64, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x2e, 0x49, 0x64, 0x3a,
	0x69, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x44, 0x6f, 0x4e, 0x6f, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x6f, 0x4e, 0x6f, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x6f, 0x4e, 0x6f, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x6c,
	0x6c, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x8a, 0xfb,
	0xaf, 0xce, 0x02, 0x11, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x12, 0x0a, 0x2f, 0x73, 0x6d, 0x61, 0x6c,
	0x6c, 0x2f, 0x3a, 0x69, 0x64, 0x12, 0x58, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x6c,
	0x6c, 0x31, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x8a,
	0xfb, 0xaf, 0xce, 0x02, 0x1a, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x12, 0x13, 0x2f, 0x73, 0x6d, 0x61,
	0x6c, 0x6c, 0x2f, 0x3a, 0x69, 0x64, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x4e, 0x0a, 0x08, 0x50, 0x75, 0x74, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x13, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x75, 0x74, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x74, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x8a, 0xfb, 0xaf, 0xce, 0x02, 0x11, 0x0a, 0x03,
	0x50, 0x55, 0x54, 0x12, 0x07, 0x2f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x2f, 0x22, 0x01, 0x2a, 0x12,
	0x52, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x6d, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x8a, 0xfb, 0xaf, 0xce, 0x02,
	0x12, 0x0a, 0x04, 0x50, 0x4f, 0x53, 0x54, 0x12, 0x07, 0x2f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x2f,
	0x22, 0x01, 0x2a, 0x12, 0x5a, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6d, 0x61,
	0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6d,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1a, 0x8a, 0xfb, 0xaf, 0xce, 0x02, 0x14, 0x0a, 0x06, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x12, 0x0a, 0x2f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x2f, 0x3a, 0x69, 0x64, 0x12,
	0x77, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x6e, 0x67, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x37, 0x8a, 0xfb, 0xaf, 0xce, 0x02, 0x31, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x12, 0x2a, 0x2f, 0x67,
	0x65, 0x74, 0x6d, 0x69, 0x64, 0x2f, 0x61, 0x2f, 0x3a, 0x69, 0x64, 0x61, 0x2f, 0x62, 0x2f, 0x3a,
	0x69, 0x64, 0x62, 0x2f, 0x63, 0x2f, 0x3a, 0x69, 0x64, 0x63, 0x2f, 0x64, 0x2f, 0x3a, 0x69, 0x64,
	0x64, 0x2f, 0x65, 0x2f, 0x3a, 0x69, 0x64, 0x65, 0x12, 0x7a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x50, 0x61, 0x74, 0x68, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x65,
	0x70, 0x50, 0x61, 0x74, 0x68, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x65, 0x70, 0x50, 0x61, 0x74, 0x68, 0x50, 0x61,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x8a, 0xfb, 0xaf, 0xce,
	0x02, 0x32, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x12, 0x2b, 0x2f, 0x64, 0x65, 0x65, 0x70, 0x70, 0x61,
	0x74, 0x68, 0x70, 0x61, 0x74, 0x68, 0x2f, 0x3a, 0x48, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x2e,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65,
	0x64, 0x2e, 0x49, 0x64, 0x12, 0x73, 0x0a, 0x13, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x62,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x62,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x8a, 0xfb,
	0xaf, 0xce, 0x02, 0x15, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x12, 0x0e, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2f, 0x12, 0x66, 0x0a, 0x0e, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1d, 0x8a, 0xfb, 0xaf, 0xce, 0x02, 0x17, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x12,
	0x10, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x6f, 0x72, 0x74, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x2f, 0x1a, 0x20, 0x9a, 0xfb, 0xaf, 0xce, 0x02, 0x1a, 0x0a, 0x01, 0x31, 0x12, 0x0a, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x2f, 0x1a, 0x09, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x76, 0x63, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x6f, 0x6f, 0x7a, 0x65, 0x72, 0x2d, 0x64, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x74,
	0x67, 0x65, 0x6e, 0x2f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x76, 0x63, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_samplesvc_proto_rawDescOnce sync.Once
	file_pb_samplesvc_proto_rawDescData = file_pb_samplesvc_proto_rawDesc
)

func file_pb_samplesvc_proto_rawDescGZIP() []byte {
	file_pb_samplesvc_proto_rawDescOnce.Do(func() {
		file_pb_samplesvc_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_samplesvc_proto_rawDescData)
	})
	return file_pb_samplesvc_proto_rawDescData
}

var file_pb_samplesvc_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_pb_samplesvc_proto_goTypes = []interface{}{
	(*DeepPathPathRequest)(nil),         // 0: pb.DeepPathPathRequest
	(*DeepPathPathResponse)(nil),        // 1: pb.DeepPathPathResponse
	(*DeepHaveAllRequest)(nil),          // 2: pb.DeepHaveAllRequest
	(*DeepHaveAllResponse)(nil),         // 3: pb.DeepHaveAllResponse
	(*HaveAll)(nil),                     // 4: pb.HaveAll
	(*Embedded)(nil),                    // 5: pb.Embedded
	(*Embedded2)(nil),                   // 6: pb.Embedded2
	(*Small)(nil),                       // 7: pb.Small
	(*GetHaveAllRequest)(nil),           // 8: pb.GetHaveAllRequest
	(*GetHaveAllResponse)(nil),          // 9: pb.GetHaveAllResponse
	(*CreateHaveAllRequest)(nil),        // 10: pb.CreateHaveAllRequest
	(*CreateHaveAllResponse)(nil),       // 11: pb.CreateHaveAllResponse
	(*DoNotCreateRequest)(nil),          // 12: pb.DoNotCreateRequest
	(*DoNotCreateResponse)(nil),         // 13: pb.DoNotCreateResponse
	(*GetSmallRequest)(nil),             // 14: pb.GetSmallRequest
	(*GetSmallResponse)(nil),            // 15: pb.GetSmallResponse
	(*PutSmallRequest)(nil),             // 16: pb.PutSmallRequest
	(*PutSmallResponse)(nil),            // 17: pb.PutSmallResponse
	(*PostSmallRequest)(nil),            // 18: pb.PostSmallRequest
	(*PostSmallResponse)(nil),           // 19: pb.PostSmallResponse
	(*DeleteSmallRequest)(nil),          // 20: pb.DeleteSmallRequest
	(*DeleteSmallResponse)(nil),         // 21: pb.DeleteSmallResponse
	(*GetLongPathRequest)(nil),          // 22: pb.GetLongPathRequest
	(*GetLongPathResponse)(nil),         // 23: pb.GetLongPathResponse
	(*EmptyRequestMessageRequest)(nil),  // 24: pb.EmptyRequestMessageRequest
	(*EmptyRequestMessageResponse)(nil), // 25: pb.EmptyRequestMessageResponse
	(*PageSortFilterRequest)(nil),       // 26: pb.PageSortFilterRequest
	(*PageSortFilterResponse)(nil),      // 27: pb.PageSortFilterResponse
	nil,                                 // 28: pb.HaveAll.MapStringStringFieldEntry
	nil,                                 // 29: pb.HaveAll.MapStringEmbeddedFieldEntry
	(*pbmap.Page)(nil),                  // 30: pbmap.Page
	(*pbmap.Sort)(nil),                  // 31: pbmap.Sort
	(*pbmap.Filter)(nil),                // 32: pbmap.Filter
}
var file_pb_samplesvc_proto_depIdxs = []int32{
	4,  // 0: pb.DeepPathPathRequest.HaveAll:type_name -> pb.HaveAll
	4,  // 1: pb.DeepHaveAllRequest.HaveAll:type_name -> pb.HaveAll
	5,  // 2: pb.HaveAll.Embedded:type_name -> pb.Embedded
	5,  // 3: pb.HaveAll.RepeatedEmbedded:type_name -> pb.Embedded
	28, // 4: pb.HaveAll.MapStringStringField:type_name -> pb.HaveAll.MapStringStringFieldEntry
	29, // 5: pb.HaveAll.MapStringEmbeddedField:type_name -> pb.HaveAll.MapStringEmbeddedFieldEntry
	5,  // 6: pb.Embedded.Embedded:type_name -> pb.Embedded
	4,  // 7: pb.GetHaveAllRequest.HaveAll:type_name -> pb.HaveAll
	4,  // 8: pb.GetHaveAllResponse.HaveAll:type_name -> pb.HaveAll
	4,  // 9: pb.CreateHaveAllRequest.HaveAll:type_name -> pb.HaveAll
	4,  // 10: pb.CreateHaveAllResponse.HaveAll:type_name -> pb.HaveAll
	7,  // 11: pb.GetSmallResponse.Small:type_name -> pb.Small
	7,  // 12: pb.PutSmallRequest.Small:type_name -> pb.Small
	7,  // 13: pb.PostSmallRequest.Small:type_name -> pb.Small
	30, // 14: pb.PageSortFilterRequest.Page:type_name -> pbmap.Page
	31, // 15: pb.PageSortFilterRequest.Sort:type_name -> pbmap.Sort
	32, // 16: pb.PageSortFilterRequest.Filter:type_name -> pbmap.Filter
	5,  // 17: pb.HaveAll.MapStringEmbeddedFieldEntry.value:type_name -> pb.Embedded
	10, // 18: pb.BigTestService.CreateHaveAll:input_type -> pb.CreateHaveAllRequest
	8,  // 19: pb.BigTestService.GetHaveAll:input_type -> pb.GetHaveAllRequest
	2,  // 20: pb.BigTestService.DeepPath:input_type -> pb.DeepHaveAllRequest
	12, // 21: pb.BigTestService.DoNotCreate:input_type -> pb.DoNotCreateRequest
	14, // 22: pb.BigTestService.GetSmall:input_type -> pb.GetSmallRequest
	14, // 23: pb.BigTestService.GetSmall1:input_type -> pb.GetSmallRequest
	16, // 24: pb.BigTestService.PutSmall:input_type -> pb.PutSmallRequest
	18, // 25: pb.BigTestService.PostSmall:input_type -> pb.PostSmallRequest
	20, // 26: pb.BigTestService.DeleteSmall:input_type -> pb.DeleteSmallRequest
	22, // 27: pb.BigTestService.GetLongPath:input_type -> pb.GetLongPathRequest
	0,  // 28: pb.BigTestService.GetPathPath:input_type -> pb.DeepPathPathRequest
	24, // 29: pb.BigTestService.EmptyRequestMessage:input_type -> pb.EmptyRequestMessageRequest
	26, // 30: pb.BigTestService.PageSortFilter:input_type -> pb.PageSortFilterRequest
	11, // 31: pb.BigTestService.CreateHaveAll:output_type -> pb.CreateHaveAllResponse
	9,  // 32: pb.BigTestService.GetHaveAll:output_type -> pb.GetHaveAllResponse
	3,  // 33: pb.BigTestService.DeepPath:output_type -> pb.DeepHaveAllResponse
	13, // 34: pb.BigTestService.DoNotCreate:output_type -> pb.DoNotCreateResponse
	15, // 35: pb.BigTestService.GetSmall:output_type -> pb.GetSmallResponse
	15, // 36: pb.BigTestService.GetSmall1:output_type -> pb.GetSmallResponse
	17, // 37: pb.BigTestService.PutSmall:output_type -> pb.PutSmallResponse
	19, // 38: pb.BigTestService.PostSmall:output_type -> pb.PostSmallResponse
	21, // 39: pb.BigTestService.DeleteSmall:output_type -> pb.DeleteSmallResponse
	23, // 40: pb.BigTestService.GetLongPath:output_type -> pb.GetLongPathResponse
	1,  // 41: pb.BigTestService.GetPathPath:output_type -> pb.DeepPathPathResponse
	25, // 42: pb.BigTestService.EmptyRequestMessage:output_type -> pb.EmptyRequestMessageResponse
	27, // 43: pb.BigTestService.PageSortFilter:output_type -> pb.PageSortFilterResponse
	31, // [31:44] is the sub-list for method output_type
	18, // [18:31] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_pb_samplesvc_proto_init() }
func file_pb_samplesvc_proto_init() {
	if File_pb_samplesvc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_samplesvc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeepPathPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeepPathPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeepHaveAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeepHaveAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HaveAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Embedded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Embedded2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Small); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHaveAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHaveAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHaveAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHaveAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoNotCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoNotCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSmallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSmallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutSmallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutSmallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostSmallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostSmallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSmallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSmallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLongPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLongPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequestMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequestMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageSortFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_samplesvc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageSortFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_samplesvc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_samplesvc_proto_goTypes,
		DependencyIndexes: file_pb_samplesvc_proto_depIdxs,
		MessageInfos:      file_pb_samplesvc_proto_msgTypes,
	}.Build()
	File_pb_samplesvc_proto = out.File
	file_pb_samplesvc_proto_rawDesc = nil
	file_pb_samplesvc_proto_goTypes = nil
	file_pb_samplesvc_proto_depIdxs = nil
}
